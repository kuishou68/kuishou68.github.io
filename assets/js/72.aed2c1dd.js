(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{423:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://pic4.zhimg.com/v2-33fde920fb6951df90e377e30df4930d_b.jpg",alt:"image-20210820155156721"}})]),s._v(" "),a("h3",{attrs:{id:"_1、vuex-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、vuex-是什么"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1、Vuex 是什么？")])]),s._v(" "),a("blockquote",[a("p",[s._v("适用场景: 复杂关系的组件数据传递")]),s._v(" "),a("p",[a("code",[s._v("Vuex")]),s._v("作用相当于一个用来存储共享变量的容器")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("state")]),s._v("用来存放共享变量的地方")]),s._v(" "),a("li",[a("code",[s._v("getter")]),s._v("，可以增加一个"),a("code",[s._v("getter")]),s._v("派生状态，(相当于"),a("code",[s._v("store")]),s._v("中的计算属性），用来获得共享变量的值")]),s._v(" "),a("li",[s._v("Vue")]),s._v(" "),a("li",[a("code",[s._v("actions")]),s._v("也是用来存放修改state的方法，不过"),a("code",[s._v("action")]),s._v("是在"),a("code",[s._v("mutations")]),s._v("的基础上进行。常用来做一些异步操作")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://static.vue-js.com/fa207cd0-3aca-11eb-ab90-d9ae814b240d.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"_2、store-的实例化过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、store-的实例化过程"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2、Store 的实例化过程")])]),s._v(" "),a("blockquote",[a("p",[s._v("State 提供了唯一的公共数据源，所有共享的数据都要统一放到Store 的 State中进行存储。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 创建store数据源，提供唯一的公共数据\nconst store = new Vuex.Store({\n    // state 指向一个对象， 对象中的数据就是需要全局共享的数据\n    state: { count:0 }\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("组件访问State 中数据的两种方式:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 第一种\n$store.state.count（全局数据名称）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 第二种，从 vuex 中按需导入 mapState 函数\nimport { mapState } from 'vuex'\n// 将全局数据，映射为当前组件的计算属性\ncomputed: {\n    ...mapState(['count'])\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_3、什么是单项数据流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、什么是单项数据流"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3、什么是单项数据流？")])]),s._v(" "),a("blockquote",[a("p",[s._v("数据触发视图的更改，视图跟用户进行交互，触发动作后修改data数据，整个环形的数据流动就叫做单项数据流。相当于（父组件传入到子组件的过程）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("new Vue({\n  // state 驱动应用的数据源；\n  data () {\n    return {\n      count: 0\n    }\n  },\n  // view 以声明方式将 state 映射到视图；\n  template: `\n    <div>{{ count }}</div>\n  `,\n  // actions 响应在 view 上的用户输入导致的状态变化。\n  methods: {\n    increment () {\n      this.count++\n    }\n  }\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fd37e2a186804c128c3e7f32c3072f41~tplv-k3u1fbpfcp-zoom-1.image",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"_4、什么是mutation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、什么是mutation"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4、什么是Mutation?")])]),s._v(" "),a("blockquote",[a("p",[s._v("①更改 Vuex 的 store 中的状态的唯一方法;")]),s._v(" "),a("p",[s._v("②只能通过mutation变更 Store数据，不可直接操作 Store 中的数据；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 定义 Mutation\nconst store = new Vuex.Store({\n    state: {\n        count：0\n    },\n    mutations: {\n        addN(state, step){\n            // 变更状态\n            state.count += step\n        }\n    }\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 触发 mutation\nmethods: {\n    handle(){ \n        // 触发 mutations 的第一种方式\n        // this.$store.commit('add')    \n        // 调用 commit 函数，触发 mutations 时携带参数\n        this.$store.commit('addN', 3)\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("总结：")]),s._v(" store 就是一个数据仓库，为了更方便的管理仓库，把一个大的store拆成小的 modules ；")]),s._v(" "),a("p",[s._v("整个 moudles 是一个树形结构，每个module又分别定义了 state，getters，mutations，actions；")]),s._v(" "),a("p",[s._v("通过递归便利模块的方式，完成了他们的初始化。")]),s._v(" "),a("p",[s._v("Vuex 提供这些API都是方便对store做各种操作来完成各种能力，尤其是 mapXXX 的设计。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);