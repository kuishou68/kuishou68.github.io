(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{469:function(s,t,n){"use strict";n.r(t);var a=n(25),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。")]),s._v(" "),n("p",[s._v("不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。")]),s._v(" "),n("p",[s._v("元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。")]),s._v(" "),n("p",[s._v("说明:")]),s._v(" "),n("p",[s._v("为什么返回数值是整数，但输出的答案是数组呢?")]),s._v(" "),n("p",[s._v("请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。")]),s._v(" "),n("p",[s._v("你可以想象内部操作如下:")]),s._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[s._v("\n// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝\nint len = "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n// 在函数里修改输入数组对于调用者是可见的。\n// 根据你的函数返回的长度"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 它会打印出数组中 该长度范围内 的所有元素。\nfor "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int i = 0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i < len"),n("span",{pre:!0,attrs:{class:"token selector"}},[s._v("; i++)")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums[i]"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("示例 1：")]),s._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[s._v("输入：nums = [3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("3]"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val = 3\n输出：2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums = [2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("2]\n解释：函数应该返回新的长度 2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("3] 或 nums = [2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("0]，也会被视作正确答案。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("示例 2：")]),s._v(" "),n("div",{staticClass:"language-css line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[s._v("输入：nums = [0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("2]"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val = 2\n输出：5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums = [0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("3]\n解释：函数应该返回新的长度 5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 并且 nums 中的前五个元素为 0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("removeElement")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n    如果右指针指向的元素不等于 val，它一定是输出数组的一个元素，我们就将右指针指向的元素复制到左指针位置，然后将左右指针同时右移；\n    如果右指针指向的元素等于 val，它不能在输出数组里，此时左指针不动，右指针右移一位。\n    */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" left "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" right "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" right "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" right"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            left"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);